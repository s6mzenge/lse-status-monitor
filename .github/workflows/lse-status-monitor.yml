name: LSE Status Monitor

"on":
  repository_dispatch:
    types: [run]
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *" # adjust as needed

permissions:
  contents: write

concurrency:
  group: lse-status-monitor
  cancel-in-progress: false

jobs:
  run:
    name: Run LSE check
    runs-on: ubuntu-latest

    env:
      GMAIL_USER: ${{ secrets.GMAIL_USER }}
      GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
      EMAIL_TO: ${{ secrets.EMAIL_TO }}
      EMAIL_TO_2: ${{ secrets.EMAIL_TO_2 }}
      EMAIL_TO_3: ${{ secrets.EMAIL_TO_3 }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      TELEGRAM_BOT_TOKEN_MAMA: ${{ secrets.TELEGRAM_BOT_TOKEN_MAMA }}
      TELEGRAM_CHAT_ID_MAMA: ${{ secrets.TELEGRAM_CHAT_ID_MAMA }}
      TELEGRAM_BOT_TOKEN_PAPA: ${{ secrets.TELEGRAM_BOT_TOKEN_PAPA }}
      TELEGRAM_CHAT_ID_PAPA: ${{ secrets.TELEGRAM_CHAT_ID_PAPA }}
      MPLBACKEND: Agg
      MANUAL_RUN: ${{ github.event_name == 'repository_dispatch' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run LSE status check
        shell: bash
        run: |
          echo "üöÄ Starting LSE check at $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          START_TIME=$(date +%s)

          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "‚ö° Manual run mode - optimized for speed"
          else
            echo "üìä Scheduled run mode - full functionality"
          fi

          python check_lse.py

          END_TIME=$(date +%s)
          DURATION=$((END_TIME - START_TIME))
          echo "‚è±Ô∏è LSE check completed in ${DURATION} seconds"

          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "üìä Manual run performance: ${DURATION}s script execution"
            echo "üéØ Optimization target: <5s total script time"
            if [ $DURATION -lt 8 ]; then
              echo "üöÄ EXCELLENT: Script execution under 8s (target achieved)"
            elif [ $DURATION -lt 15 ]; then
              echo "‚ö° GOOD: Script execution under 15s (improvement achieved)"
            else
              echo "‚ö†Ô∏è SLOW: Script execution over 15s (needs optimization)"
            fi
          fi

      - name: Commit and push changes
        run: |
          # Git configuration
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if there are changes to commit
          if git diff --quiet && git diff --cached --quiet; then
            echo "=== No changes to commit ==="
          else
            echo "=== Committing changes ==="
            git add status.json history.json
            git diff --cached --stat
            
            # Commit with timestamp
            TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
            if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
              git commit -m "Manual update via repository_dispatch [skip ci] - $TIMESTAMP"
            else
              git commit -m "Update status and history [skip ci] - $TIMESTAMP"
            fi
            
            # Push changes
            echo "üì§ Pushing changes..."
            if git push origin main; then
              echo "‚úÖ Push successful!"
            else
              echo "‚ö†Ô∏è Push conflict, attempting rebase..."
              git pull --rebase origin main && git push origin main
            fi
          fi